# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.

  config.vm.box = "https://s3-eu-west-1.amazonaws.com/sotech-tools/boxes/CentOS-7-x86_64-chef.box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
   config.vm.network "private_network", ip: "192.168.33.160"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
   config.vm.synced_folder "../../", "/mnt/project/", type: "nfs"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
    config.vm.provider "virtualbox" do |v|
        v.name = "jockpwatest"
        v.memory = 12226
        v.cpus = 6
    end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
  #

  # Enable proviioning with Chef Solo
    config.vm.provision "chef_solo" do |chef|
        # logging
        chef.cookbooks_path = ["Chef/cookbooks"]
        chef.roles_path = "Chef/roles"
        chef.add_recipe "yum-remi-chef::remi-php72"
        chef.add_recipe "apt"
        chef.add_recipe "so_technology_magento::filesystem"
        chef.add_recipe "so_technology_magento::iptables"
        chef.add_recipe "so_technology_magento::varnish"
        chef.add_recipe "so_technology_magento::composer"
        chef.add_recipe "so_technology_magento"
     
    # You may also specify custom JSON attributes:
    chef.json = {
      'yum' => {
        'epel_release' => '7-6',
        'ius_release' => '1.0-11'
      },
      'mysql' => {
        'server_root_password' => "root",
        'server_repl_password' => 'root',
        'server_debian_password' => 'root',
        'bind_address' => '0.0.0.0',
         'master' => true
      },
      'varnish' => {
        'configure' => {
            'config' => {
                'listen_port' => 80
            }
         }
      },
      'apache' => {
        'listen' => ["8080","443" ],
        'prefork' => {
          'startservers' => '10',
          'minspareservers' => '10'
        },
        'worker' => {
          'startservers' => '10',
          'minspareservers' => '10'
        }
      },
      'so_technology_magento' => {
        'dir' => "/mnt/project",
        'apache' => {
          'developer_mode' => "true",
          'unsecure_port' => 8080,
          'secure_port' => 443,
          'servername' => "jockpwatest.development.local",
           'server_alias' => [
            "jockpwatest.development.local",
          ],
          'docroot' => "/mnt/project",
          'path' => "/pub",
          'additional_config_path' => "/mnt/project/config.d"
        },
        'php' => {
            'directives' => {
                'memory_limit' => "2048M",
                'max_execution_time' => "18000",
                'display_errors' => "On",
                'html_errors' => "On",
                'upload_max_filesize' => '50M'
            },
        },
        'php-fpm' => {
            'pools' => {
                'www' => {
                    'memory_limit' => "2048M",
                    'max_execution_time' => "18000",
                    'display_errors' => "On",
                    'html_errors' => "On",
                    'upload_max_filesize' => '50M'
                },
            },
        },
        'admin' => {
          'user' => 'admin',
          'password' => '123123pass',
          'frontname' => "admin"
        },
        'app' => {
          'language' => "en_US",
          'currency' => "GBP",
          'timezone' => "Europe/London",
          'rewrites' => "1",
          'baseurl' => "jockpwatest.development.local",
          'secure' => "0",
          'base' => {
            'secure' => "0"
          },
          'admin' => {
            'secure' => "0"
          },
          'securekey' => "1",
          'session' => "db",
          'admin_frontname' => 'admin',
        },
        'db' => {
          'database' => "magentodb",
          'user' => "magentouser",
          'password' => "magentodbpass",
          'host' => '127.0.0.1'
        }
      }
    }

    end
end
